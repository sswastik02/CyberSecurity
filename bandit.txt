level 0: ssh bandit.labs.overthewire.org -l bandit1 -p 2220

level 0-1: boJ9jbbUNNfktd78OOpsqOltutMc3MY1(from cat readme in level 0) then exit and ssh with -l bandit1

level 1-2: cat ~/-  => CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9 (for next level) then ssh to bandit2

level 2-3: cat 'spaces in this filename' => UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK => ssh to bandit 3

level 3-4: cd inhere => ls --all => cat .hidden => pIwrPrtPN36QITSp3EQaw936yaFoFgAB => ssh bandit4

level 4-5: file --mime-type ./* => prints content-type of all files => cat ./-file07 => koReBOKuIDDepwhWk7jZC0RTdopnAYKh => ssh bandit5

level 5-6: find -size 1033c -exec file --mime-type {} \; | grep text => in directories and sub-dirctories find for file with size 1033 bytes and execute the file commmand on the result (\; means termination there are others such as + ) => cat ./inhere/maybehere07/.file2 => DXjZPULLxYr17uwoI01bNLQbtFemEgo7 => ssh bandit6

level 6-7: find / -size 33c -user bandit7 -group bandit6 2>/dev/null (1 gives stdout and 2 gives stderr)
=> cat the searched file => HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs => ssh bandit7

level 7-8: cat data.txt|grep millionth => cvX2JJa4CFALtqS87jk27qwqGhBM9plV => ssh bandit8

level 8-9: sort data.txt | uniq -u => UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR => ssh bandit9

level 9-10: cat data.txt | strings --encoding=s | grep =   => truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk => ssh bandit10

level 10-11: base64 -d data.txt => IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR => ssh bandit11

level 11-12: cat data.txt | tr 'a-mn-zA-MN-Z' 'n-za-mN-ZA-M' => 5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu => ssh bandit12

level 12-13: xxd -r data.txt > d.txt ( hexdump to binary )
	  analyse file using : file [FILE_NAME]
	  accordingly deploy :	
	  			gz -d [FILE_NAME]  (FILE_NAME needs to be renamed to .gz)
	  			bzip2 -d [FILE_NAME]
	  			tar -x -f [ARCHIVE]
	  			
	  until you get ascii file then => cat data8 => 8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL => ssh 			bandit13
	  

level 13-14: ssh -i sshkey.private bandit14@localhost => login into bandit14 => cat /etc/bandit_pass/bandit14  => 4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e => ssh bandit14

level 14-15: telnet localhost 30000 => enter 4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e => BfMYroe26WYalil77FoDi9qh59eK5xNr

level 15-16: openssl s_client localhost:30001 => enter BfMYroe26WYalil77FoDi9qh59eK5xNr => cluFn7wTiGryunymYOu4RcffSxQluehd

level 16-17 : nc -zv localhost 31000-32000 => Gave 5 ports => openssl s_client -state -connect localhost:31790 => (IT IS SSL) => cluFn7wTiGryunymYOu4RcffSxQluehd => ssh key => copy output => mkdir /tmp/bandit16 (Its the only directory you can make) => nano pri.key => paste => chmod 600 pri.key (Otherwise ssh key too open, the command makes the file readable and writable only by you) => ssh -i pri.key bandit17@localhost => 

ls found 2 files => diff passwords.new passwords.old => gave 2 (both non-functional) => from level 13-14 => cat /etc/bandit_pass/bandit17 => xLYVMN9WE5zQ5vHacb0sZEVqbrp7nBTn

level 17-18: diff passwords.new passwords.old => 2 keys => one of them is password but logged out as soon as logged in => kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd => ssh -n  bandit18@localhost cat readme (-n redirects stdin from /dev/null to you) => enter kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd
=> IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x

level 18-19: Password taken out in previous level
level 19-20: ls=> bandit20-do => ./bandit20-do cat /etc/bandit_pass/bandit20 => GbKksEFF4yrVs6il55v6gwY5aVje5f0j

level 20-21: 

Just wanted to say I managed to find the answer. It turns out that the localhost is the local daemon and connecting to it means doing 2 netcats: One that listens on a port, and one that connects to it.
netcats = nc

1st terminal : nc -lp 2000 => enter the password of bandit 20
2nd terminal : ./suconnect 2000 (after nc)

=> gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr

level 21-22:  cd /etc/cron.d => ls => cat cronjob_bandit24 => cat /usr/var/cronjob_bandit24.sh => cat /tmp/t2356............ => Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI

level 22-23: cd /etc/cron.d => cd /usr/bin => cat cronjob_bandit23.sh => myname=bandit23 => 
(echo I am user $myname | md5sum | cut -d ' ' -f 1) => 8ca319486bfbbc3663ea0fbe81326349 => cat /tmp/8ca319486bfbbc3663ea0fbe81326349 => jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n

level 23-24: cd /etc/cron.d => cd /usr/bin => cat cronjob_bandit24.sh => cd /var/spool/bandit24 => touch custom.sh => 

#!/bin/bash
cat /etc/bandit_pass/bandit24 > /tmp/sswastik02

=> chmod +x custom.sh (required) => wait while reading /tmp/sswastik02 => UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ

level 24-25: 

initially i made into seperate files and the connection timeout would take 2 hrs

mkdir /tmp/testss => cd /tmp/testss => nano custom.sh

#!/bin/bash

for {1000..10000..1}
do
echo "UoMYTrfrBFHyQXmg6gzctqAwOmw1IohZ $i" >> output.txt    (>> means do not overwrite)
done

=> chmod +x custom.sh => ./custom.sh => nc localhost < output.txt => uNG9O58gUE7snukf3bvZ0rxhtnjzSGzG

level 25-26:

cat /etc/passwd => will give type of shell such as bash of all users => 
bandit26 shell => cat /usr/bin/showtext =>

#!/bin/sh

export TERM=linux

more ~/text.txt
exit 0

more is a page viewer it will show as much as the terminal window can show and stop rest of the script midway 

so i made my terminal screen really small

and then ssh using key => the printing stopped midway => press v to open vim while more is operating => type :e /etc/bandit_pass/bandit26 => (opening in editing mode the file) => copied using mouse 5czgV9L3Xx8JPOyRbXh6lQbmIOWvPT6Z => :q to quit vim 

level 26-27 : 

(Terminal window size should be small like last level)

In previous level if you do 
:e /home/bandit26 => error not a directory and it printed contents of it => which had a binary file bandit27-do which will be required here but first we need a shell

in the previous level we just viewed the password not access its shell

:shell will open an instance in vim but by default shell = /usr/bin/showtext
so we have to set shell to /bin/bash => 
:set shell=/bin/bash   => 
:shell =>
this will get you a shell in vim        ======>

./bandit27-do cat /etc/bandit_pass/bandit27 => 3ba3118a22e93127a4ed485be72ef5ea

level 27-28:

mkdir /tmp/yout => git clone ssh://bandit-27@localhost/home/bandit27/repo => cd repo => cat README =>
0ef186ac70e04ea33b4c1853d2526fa2

level 28-29: 
mkdir /tmp/repos => git clone ssh://bandit-28@localhost/home/bandit28/repo => git log => git rebase <commitid>  => git revert edd935d60906b33f0619605abd1689808ccdd5ee(initial commit) => cat README.md
=> bbc96594b4e001778eee9975372716b2

level 29-30: 


branches : Development => Staging => Production

mkdir /tmp/repos => git clone ................. => git branch --all => git checkout dev => cat README.md => 5b90576bedb2cc04c86a9e924ce42faf

level 30-31 : git tags are used by developers to mark important points in their repositories

mkdir ....... => git clone ............. => git tag => git show secret (tag stores a specefic data) => 47e603bb428404d265f59c42920d81e5

level 31-32 : mkdir ........... => git clone ........... => touch key.txt => echo "May I come in?" > key.txt => echo "" > .gitignore => git add . => git commit -m "new" => git push origin master => 56a9bf19c63d650ce78e6ec0354ee45e

level 32-33: 
this level has a shell which is not BASH UPPERCASESHELL this shell converts all commands to uppercase so.......... $home = $HOME was printing home directory

if this shell was executed using sh then during the execution $0 will give the calling script

./customscript.sh file1 file2

$0 : ./customscript.sh (in bash customscript.sh)
$1 : file1
$2 : file2

=> enter $0 => bash shell will run => ls -al => uppershell user is bandit33 so bandit33 is the primary user hence cat /etc/bandit_pass/bandit33 => c9c3199ddf4121b10cf581a98d51caee (notice bandit32 password cant be printed permission denied cuz primary user is bandit33 who is runnung uppershell which we converted to a shell)

Finished.............













